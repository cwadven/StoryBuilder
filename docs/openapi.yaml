openapi: 3.0.3
info:
  title: StoryBuilder User Side 3.0
  description: |-
    StoryBuilder 로 만들어진 서비스
    
  contact:
    email: cwadven@naver.com
  version: 1.0.1
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: User
    description: 회원 관련 API
  - name: Play
    description: 실행 시, 필요한 API
  - name: Hint
    description: Sheet 힌트
  - name: Point
    description: 포인트 관련
paths:
  /account/sign-up-validation:
    post:
      tags:
        - User
      summary: 회원가입 검증을 위한 API
      description: 중복된 Nickname, Email 및 Password 가 유효한지 검사합니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpValidationReuqestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidationSuccessResponse'          
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidationFailResponse'
  /account/sign-up-check:
    post:
      tags:
        - User
      summary: 회원가입을 위한 인증 번호 전송
      description: 회원가입을 위해 인증번호 생성 작업을 위한 API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpCheckReuqestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpCheckSuccessResponse'
  /account/sign-up-validate-token:
    post:
      tags:
        - User
      summary: 회원가입을 위해 전송한 인증 번호 검증을 통한 회원가입
      description: 회원가입을 위해 전송한 인증 번호 검증을 통한 회원가입 API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpValidateTokenReuqestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidateTokenSuccessResponse'
        '400':
          description: Invali token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidateTokenFailResponse'
  /account/login:
    post:
      tags:
        - User
      summary: 로그인
      description: 로그인 API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginReuqestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginSuccessResponse'
        '400':
          description: Invalid to login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginFailResponse'
  /v1/story/{story_id}/play:
    get:
      tags:
        - Play
      summary: 스토리 플레이
      description: 스토리 플레이 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: story_id
          in: path
          description: story id 를 이용해서 스토리의 첫 시작을 할 수 있도록 내용을 가져옵니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryStartSuccessResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryStartFailResponse'
  /v1/story/sheet/{sheet_id}/play:
    get:
      tags:
        - Play
      summary: Sheet 플레이
      description: Sheet 플레이 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: sheet_id
          in: path
          description: sheet id 를 이용해서 스토리의 첫 시작을 할 수 있도록 내용을 가져옵니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetPlaySuccessResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetPlayFailResponse'
  /v1/story/submit_answer:
    post:
      tags:
        - Play
      summary: Sheet 정답 제출
      description: Sheet 정답 제출 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorySheetAnswerSubmitReuqestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetAnswerSubmitSuccessResponse'
        '400':
          description: Invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetAnswerSubmitFailResponse'
  /v1/hint/sheet/{sheet_id}:
    get:
      tags:
        - Hint
      summary: Sheet 힌트 전부 가져오기
      description: Sheet 힌트 전부 가져오기 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: sheet_id
          in: path
          description: sheet id 를 이용해서 힌트들을 가져옵니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSheetHintsSuccessResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSheetHintsFailResponse'
    post:
      tags:
        - Hint
      summary: Sheet 힌트 얻기
      description: Sheet 힌트 얻기
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: sheet_id
          in: path
          description: sheet id 를 이용해서 힌트들을 가져옵니다.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SheetHintReuqestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSheetHintsSuccessResponse'
        '400':
          description: Invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSheetHintsFailResponse'
  /v1/point/user:
    get:
      tags:
        - Point
      summary: 유저의 포인트를 가져옵니다.
      description: 유저의 포인트를 가져옵니다.
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserTotalPointSuccessResponse'
components:
  schemas:
    UserSignUpValidationReuqestBody:
      required:
        - username
        - nickname
        - password1
        - password2
        - email
      type: object
      properties:
        username:
          type: string
          example: 'cwadven'
          description: '아이디'
        nickname:
          type: string
          example: 'NULLY'
          description: '닉네임'
        password1:
          type: string
          example: '1q2w3e4r!'
          description: '비밀번호'
        password2:
          type: string
          example: '1q2w3e4r!'
          description: '비밀번호 확인'
        email:
          type: string
          example: 'cwadven@naver.com'
          description: '이메일'
    UserSignUpCheckReuqestBody:
      required:
        - username
        - nickname
        - password2
        - email
      type: object
      properties:
        username:
          type: string
          example: 'cwadven'
          description: '아이디'
        nickname:
          type: string
          example: 'NULLY'
          description: '닉네임'
        password2:
          type: string
          example: '1q2w3e4r!'
          description: '비밀번호'
        email:
          type: string
          example: 'cwadven@naver.com'
          description: '이메일'
    UserSignUpValidateTokenReuqestBody:
      required:
        - email
        - one_time_token
      type: object
      properties:
        email:
          type: string
          example: 'cwadven@naver.com'
          description: '이메일'
        one_time_token:
          type: string
          example: '0457'
          description: '인증번호'
    UserLoginReuqestBody:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: 'cwadven'
          description: '아이디'
        password:
          type: string
          example: '1q2w3e4r!'
          description: '비밀번호'
    StorySheetAnswerSubmitReuqestBody:
      required:
        - sheet_id
        - answer
      type: object
      properties:
        sheet_id:
          type: integer
          example: 11
          description: 'sheet_id'
        answer:
          type: string
          example: '0503'
          description: '정답'
    SheetHintReuqestBody:
      required:
        - sheet_hint_id
      type: object
      properties:
        sheet_hint_id:
          type: integer
          example: 11
          description: 'sheet_hint_id'
    UserSignUpValidationSuccessResponse:
      required:
        - result
      type: object
      properties:
        result: 
          type: string
          example: 'success'
    UserSignUpValidationFailResponse:
      required:
        - username
        - nickname
        - password1
        - password2
        - email
      type: object
      properties:
        username: 
          type: array
          items: 
            type: string
            format: nullable
            example: '이미 사용중인 아이디입니다.'
        nickname: 
          type: array
          items: 
            type: string
            format: nullable
            example: '이미 사용중인 닉네임입니다.'
        email: 
          type: array
          items: 
            type: string
            format: nullable
            example: '이미 가입한 이메일입니다.'
        password2: 
          type: array
          items: 
            type: string
            format: nullable
            example: '비밀번호와 비밀번호 확인이 동일하지 않습니다.'
    UserSignUpCheckSuccessResponse:
      required:
        - message
      type: object
      properties:
        message: 
          type: string
          example: '인증번호를 이메일로 전송했습니다.'
    UserSignUpValidateTokenSuccessResponse:
      required:
        - message
      type: object
      properties:
        message: 
          type: string
          example: '회원가입에 성공했습니다.'
    UserSignUpValidateTokenFailResponse:
      required:
        - message
      type: object
      properties:
        message: 
          type: string
          example: '이미 가입한 이메일입니다.'
    UserLoginSuccessResponse:
      required:
        - accessToken
      type: object
      properties:
        accessToken: 
          type: string
          example: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzU1MDA2MzgsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDg5NTgzOH0.l7N6M571w5iZMCoWe2lmkGEsW1zoclQG2poTi2_slR8'
    UserLoginFailResponse:
      required:
        - result
      type: object
      properties:
        result: 
          type: string
          example: '이이디/비밀번호 문제가 발생했습니다.'
    StoryStartSuccessResponse:
      required:
        - sheet_id
        - title
        - question
        - image
        - background_image
        - next_sheet_id
        - answer
        - answer_reply
        - is_solved
      type: object
      properties:
        sheet_id: 
          type: integer
          example: 3
        title: 
          type: string
          format: nullable
          example: '어디서부터 시작을 해야하지?'
        question: 
          type: string
          format: nullable
          example: '단서를 찾기 위해 창우 집을 가봐야겠어! 창우 집 주소가 어떻게 됐더라? (정확한 도로명주소 "시" "구" 그리고 "호수"는 정답으로 작성할 필요가 없습니다.)'
        image: 
          type: string
          format: nullable
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_image/3/ac99667c-10aa-4af7-9e30-09e31dfc3894_house.jpg'
        background_image: 
          type: string
          format: nullable
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_background_image/3/d4acf837-a4d0-4efa-978b-c54aa649adc7_sky.jpg'
        next_sheet_id: 
          type: integer
          format: nullable
          example: 4
        answer: 
          type: string
          format: nullable
          example: '신원로3길 13-7'
        answer_reply: 
          type: string
          format: nullable
          example: '맞아 건물 이름은 아트빌이고 302호로 알고 있어!! 빨리 집으로 가보자!!'
        is_solved: 
          type: boolean
          example: true
    StoryStartFailResponse:
      required:
        - message
      type: object
      properties:
        message: 
          type: string
          example: '스토리를 불러올 수 없습니다.'
    SheetPlaySuccessResponse:
      required:
        - sheet_id
        - title
        - question
        - image
        - background_image
        - next_sheet_id
        - answer
        - answer_reply
        - is_solved
      type: object
      properties:
        sheet_id: 
          type: integer
          example: 3
        title: 
          type: string
          format: nullable
          example: '어디서부터 시작을 해야하지?'
        question: 
          type: string
          format: nullable
          example: '단서를 찾기 위해 창우 집을 가봐야겠어! 창우 집 주소가 어떻게 됐더라? (정확한 도로명주소 "시" "구" 그리고 "호수"는 정답으로 작성할 필요가 없습니다.)'
        image: 
          type: string
          format: nullable
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_image/3/ac99667c-10aa-4af7-9e30-09e31dfc3894_house.jpg'
        background_image: 
          type: string
          format: nullable
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_background_image/3/d4acf837-a4d0-4efa-978b-c54aa649adc7_sky.jpg'
        next_sheet_id: 
          type: integer
          format: nullable
          example: 4
        answer: 
          type: string
          format: nullable
          example: '신원로3길 13-7'
        answer_reply: 
          type: string
          format: nullable
          example: '맞아 건물 이름은 아트빌이고 302호로 알고 있어!! 빨리 집으로 가보자!!'
        is_solved: 
          type: boolean
          example: true
    SheetPlayFailResponse:
      required:
        - message
      type: object
      properties:
        message: 
          type: string
          example: '접근할 수 없는 Sheet 입니다.'
    SheetAnswerSubmitSuccessResponse:
      required:
        - is_valid
        - next_sheet_id
        - answer_reply
      type: object
      properties:
        is_valid: 
          type: boolean
          example: true
        next_sheet_id: 
          type: integer
          format: nullable
          example: 14
        answer_reply: 
          type: string
          example: '창우 너무 단순하게 비밀번호 짠거 아니야? 아까도 집 비밀번호도 그렇고! 설마 다음에도 나오는 모든 4자리 비밀번호 똑같은 거는 아니겠지?? 생각을 그만하고 안에 무엇이 들었는지 확인하자!'
    SheetAnswerSubmitFailResponse:
      required:
        - message
      type: object
      properties:
        message: 
          type: string
          example: '이미 문제를 해결한 기록이 있습니다.'
    GetSheetHintsSuccessResponse:
      required:
        - user_sheet_hint_infos
      type: object
      properties:
        user_sheet_hint_infos: 
          type: array
          items: 
            type: object
            properties: 
              id: 
                type: integer
                example: 1
              hint: 
                type: string
                example: ''
              point: 
                type: integer
                example: 10
              image: 
                type: string
                example: ''
              has_history: 
                type: boolean
                example: false
    GetSheetHintsFailResponse:
      required:
        - message
      type: object
      properties:
        message: 
          type: string
          example: '존재하지 않은 Sheet 입니다.'
    PostSheetHintsSuccessResponse:
      required:
        - id
        - hint
        - point
        - image
        - has_history
      type: object
      properties:
        id: 
          type: integer
          example: 1
        hint: 
          type: string
          example: '문제에 정답이 있어요!!'
        point: 
          type: integer
          example: 10
        image: 
          type: string
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_hint_image/1/df317dcf-b161-48b7-ac4e-31c255b73d2c_window_logo.jpg'
        has_history: 
          type: boolean
          example: true
    PostSheetHintsFailResponse:
      required:
        - message
      type: object
      properties:
        message: 
          type: string
          example: '유저의 포인트가 부족합니다.'
    GetUserTotalPointSuccessResponse:
      required:
        - total_point
      type: object
      properties:
        total_point: 
          type: integer
          example: 100
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header