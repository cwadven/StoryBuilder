openapi: 3.0.3
info:
  title: StoryBuilder User Side 3.0
  description: |-
    StoryBuilder 로 만들어진 서비스
    
  contact:
    email: cwadven@naver.com
  version: 1.0.1
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: User
    description: 회원 관련 API
  - name: Play
    description: 실행 시, 필요한 API
  - name: Hint
    description: Sheet 힌트
  - name: Point
    description: 포인트 관련
  - name: Payment
    description: 결제 관련
paths:
  /account/sign-up-validation:
    post:
      tags:
        - User
      summary: 회원가입 검증을 위한 API
      description: 중복된 Nickname, Email 및 Password 가 유효한지 검사합니다.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpValidationRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidationSuccessResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidationFailResponse'
  /account/social-login:
    post:
      tags:
        - User
      summary: 소셜 로그인
      description: 소셜 로그인
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSocialLoginRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidationSuccessResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidationFailResponse'
  /account/sign-up-check:
    post:
      tags:
        - User
      summary: 회원가입을 위한 인증 번호 전송
      description: 회원가입을 위해 인증번호 생성 작업을 위한 API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpCheckRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpCheckSuccessResponse'
  /account/sign-up-validate-token:
    post:
      tags:
        - User
      summary: 회원가입을 위해 전송한 인증 번호 검증을 통한 회원가입
      description: 회원가입을 위해 전송한 인증 번호 검증을 통한 회원가입 API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignUpValidateTokenRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidateTokenSuccessResponse'
        '400':
          description: Invali token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignUpValidateTokenFailResponse'
  /account/login:
    post:
      tags:
        - User
      summary: 로그인
      description: 로그인 API
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginSuccessResponse'
        '400':
          description: Invalid to login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginFailResponse'
  /v1/story/:
    get:
      tags:
        - Story Display
      summary: 스토리 리스트 조회
      description: 스토리 리스트 조회
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: 검색 (title, description)
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: 페이지 (default = 1)
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: 데이터 가져오는 개수 (default = 10)
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of stories
          content:
            application/json:
              schema:
                type: object
                properties:
                  stories:
                    type: array
                    items:
                      $ref: '#/components/schemas/StoryListItemDTO'
  /v1/story/{story_id}:
    get:
      tags:
        - Story Display
      summary: 스토리 디테일 조회
      description: 스토리 디테일 조회
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
        - name: story_id
          in: path
          description: story id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of stories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryDetailItemDTO'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryStartFailResponse'
  /v1/story/popular:
    get:
      tags:
        - Story Display
      summary: 스토리 인기 리스트 조회
      description: 스토리 인기 리스트 조회
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of stories
          content:
            application/json:
              schema:
                type: object
                properties:
                  popular_stories:
                    type: array
                    items:
                      $ref: '#/components/schemas/PopularStoryListItemDTO'
  /v1/story/{story_id}/solve-history:
    get:
      tags:
        - Story History
      summary: 스토리 플레이 히스토리 조회
      description: 스토리 플레이 히스토리 조회
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
        - name: story_id
          in: path
          description: story id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupedSheetAnswerSolve'
    delete:
      tags:
        - Story History
      summary: 스토리 플레이 히스토리 제거
      description: 스토리 플레이 히스토리 제거
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
        - name: story_id
          in: path
          description: story id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: success
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryHistoryDeleteFailResponse'
  /v1/story/{story_id}/play:
    get:
      tags:
        - Play
      summary: 스토리 플레이
      description: 스토리 플레이 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: story_id
          in: path
          description: story id 를 이용해서 스토리의 첫 시작을 할 수 있도록 내용을 가져옵니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryStartSuccessResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryStartFailResponse'
  /v1/story/{story_id}/recent-play-sheet:
    get:
      tags:
        - Play
      summary: Story 에서 최근 플레이 한 Sheet 가져오기
      description: Story 에서 최근 플레이 한 Sheet 가져오기 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: story_id
          in: path
          description: story id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecentStorySheetPlayedSuccessResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecentStorySheetPlayedFailResponse'
  /v1/story/sheet/{sheet_id}/play:
    get:
      tags:
        - Play
      summary: Sheet 플레이
      description: Sheet 플레이 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: sheet_id
          in: path
          description: sheet id 를 이용해서 스토리의 첫 시작을 할 수 있도록 내용을 가져옵니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetPlaySuccessResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetPlayFailResponse'
  /v1/story/submit_answer:
    post:
      tags:
        - Play
      summary: Sheet 정답 제출
      description: Sheet 정답 제출 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorySheetAnswerSubmitRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetAnswerSubmitSuccessResponse'
        '400':
          description: Invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SheetAnswerSubmitFailResponse'
  /v1/hint/sheet/{sheet_id}:
    get:
      tags:
        - Hint
      summary: Sheet 힌트 전부 가져오기
      description: Sheet 힌트 전부 가져오기 API
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: sheet_id
          in: path
          description: sheet id 를 이용해서 힌트들을 가져옵니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSheetHintsSuccessResponse'
        '400':
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSheetHintsFailResponse'
    post:
      tags:
        - Hint
      summary: Sheet 힌트 얻기
      description: Sheet 힌트 얻기
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: sheet_id
          in: path
          description: sheet id 를 이용해서 힌트들을 가져옵니다.
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SheetHintRequestBody'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSheetHintsSuccessResponse'
        '400':
          description: Invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSheetHintsFailResponse'
  /v1/point/user:
    get:
      tags:
        - Point
      summary: 유저의 포인트를 가져옵니다.
      description: 유저의 포인트를 가져옵니다.
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserTotalPointSuccessResponse'
  /v1/payment/point:
    get:
      tags:
        - Payment
      summary: 포인트 구매를 위한 리스트 조회
      description: 유저가 구매할 포인트를 조회합니다.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPostPointProductSuccessResponse'
  /v1/payment/point/buy/kakao:
    post:
      tags:
        - Payment
      summary: 카카오페이 결제 준비
      description: 유저가 구매할 포인트 결제를 준비합니다.
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
      requestBody:
        description: Order creation details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: The ID of the product.
                  example: 1
                quantity:
                  type: integer
                  description: The quantity of the product to order.
                  default: 1
                payment_type:
                  type: string
                  description: The type of payment to use.
                  example: KAKAO
              required:
                - product_id
                - payment_type
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostPointProductRequestSuccessResponse'
  /v1/payment/point/approve/kakao/{order_id}:
    get:
      tags:
        - Payment
      summary: 카카오페이 결제 성공
      description: 유저가 구매를 성공하는 경우.
      parameters:
        - name: order_id
          in: path
          description: ID of the order to be approved
          required: true
          schema:
            type: integer
        - name: pg_token
          in: query
          description: Token for payment gateway
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    description: Approval confirmation message.
                    example: "결제가 완료되었습니다."
  /v1/payment/point/cancel/kakao/{order_id}:
    get:
      tags:
        - Payment
      summary: 카카오페이 결제 취소
      description: 유저가 구매를 취소하는 경우.
      parameters:
        - name: order_id
          in: path
          description: ID of the order to be approved
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    description: Cancel confirmation message.
                    example: "결제가 취소되었습니다."
  /v1/payment/point/fail/kakao/{order_id}:
    get:
      tags:
        - Payment
      summary: 카카오페이 결제 실패
      description: 유저가 구매를 실패하는 경우.
      parameters:
        - name: order_id
          in: path
          description: ID of the order to be approved
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    description: Fail confirmation message.
                    example: "결제가 실패되었습니다."
  /v1/banner:
    get:
      tags:
        - Banner
      summary: Get active banners
      description: Returns a list of active banners.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  banners:
                    type: array
                    items:
                      $ref: '#/components/schemas/BannerListItemDTO'
  /v1/banner/{banner_id}:
    get:
      tags:
        - Banner
      summary: Get active banners
      description: Returns a list of active banners.
      parameters:
        - name: banner_id
          in: path
          description: banner_id 를 이용해서 Detail 조회
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BannerDetailItemDTO'
        '400':
          description: Banner Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBannerDetailFailResponse'
  /v1/story/{story_id}/like:
    post:
      tags:
        - Like
      summary: 좋아요를 합니다.
      description: 좋아요를 합니다.
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: story_id
          in: path
          description: story id 를 이용해서 좋아요를 합니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
        '401':
          description: Invalid to login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotLoginResponse'
    delete:
      tags:
        - Like
      summary: 좋아요를 취소 합니다.
      description: 좋아요를 취소 합니다.
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: true
          schema:
            type: string
        - name: story_id
          in: path
          description: story id 를 이용해서 좋아요를 취소합니다.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
        '401':
          description: Invalid to login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotLoginResponse'
components:
  schemas:
    UserNotLoginResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '로그인이 필요합니다.'
    UserSocialLoginRequestBody:
      required:
        - provider
        - token
      type: object
      properties:
        provider:
          type: integer
          description: '2 카카오, 3 네이버, 4 구글'
          example: 2
        token:
          type: string
          example: 'tokentoken'
    UserSignUpValidationRequestBody:
      required:
        - username
        - nickname
        - password1
        - password2
        - email
      type: object
      properties:
        username:
          type: string
          example: 'cwadven'
          description: '아이디'
        nickname:
          type: string
          example: 'NULLY'
          description: '닉네임'
        password1:
          type: string
          example: '1q2w3e4r!'
          description: '비밀번호'
        password2:
          type: string
          example: '1q2w3e4r!'
          description: '비밀번호 확인'
        email:
          type: string
          example: 'cwadven@naver.com'
          description: '이메일'
    UserSignUpCheckRequestBody:
      required:
        - username
        - nickname
        - password2
        - email
      type: object
      properties:
        username:
          type: string
          example: 'cwadven'
          description: '아이디'
        nickname:
          type: string
          example: 'NULLY'
          description: '닉네임'
        password2:
          type: string
          example: '1q2w3e4r!'
          description: '비밀번호'
        email:
          type: string
          example: 'cwadven@naver.com'
          description: '이메일'
    UserSignUpValidateTokenRequestBody:
      required:
        - email
        - one_time_token
      type: object
      properties:
        email:
          type: string
          example: 'cwadven@naver.com'
          description: '이메일'
        one_time_token:
          type: string
          example: '0457'
          description: '인증번호'
    UserLoginRequestBody:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
          example: 'cwadven'
          description: '아이디'
        password:
          type: string
          example: '1q2w3e4r!'
          description: '비밀번호'
    StorySheetAnswerSubmitRequestBody:
      required:
        - sheet_id
        - answer
      type: object
      properties:
        sheet_id:
          type: integer
          example: 11
          description: 'sheet_id'
        answer:
          type: string
          example: '마음의 눈으로 보시지요'
          description: '정답'
    SheetHintRequestBody:
      required:
        - sheet_hint_id
      type: object
      properties:
        sheet_hint_id:
          type: integer
          example: 11
          description: 'sheet_hint_id'
    UserSignUpValidationSuccessResponse:
      required:
        - result
      type: object
      properties:
        result:
          type: string
          example: 'success'
    UserSignUpValidationFailResponse:
      required:
        - username
        - nickname
        - password1
        - password2
        - email
      type: object
      properties:
        username:
          type: array
          items:
            type: string
            format: nullable
            example: '이미 사용중인 아이디입니다.'
        nickname:
          type: array
          items:
            type: string
            format: nullable
            example: '이미 사용중인 닉네임입니다.'
        email:
          type: array
          items:
            type: string
            format: nullable
            example: '이미 가입한 이메일입니다.'
        password2:
          type: array
          items:
            type: string
            format: nullable
            example: '비밀번호와 비밀번호 확인이 동일하지 않습니다.'
    UserSignUpCheckSuccessResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '인증번호를 이메일로 전송했습니다.'
    UserSignUpValidateTokenSuccessResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '회원가입에 성공했습니다.'
    UserSignUpValidateTokenFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '이미 가입한 이메일입니다.'
    UserLoginSuccessResponse:
      required:
        - accessToken
      type: object
      properties:
        accessToken:
          type: string
          example: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzU1MDA2MzgsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDg5NTgzOH0.l7N6M571w5iZMCoWe2lmkGEsW1zoclQG2poTi2_slR8'
    UserLoginFailResponse:
      required:
        - result
      type: object
      properties:
        result:
          type: string
          example: '아이디/비밀번호 정보가 일치하지 않습니다.'
    StoryStartSuccessResponse:
      required:
        - sheet_id
        - title
        - question
        - image
        - background_image
        - previous_sheet_infos
        - next_sheet_id
        - answer
        - answer_reply
        - is_solved
      type: object
      properties:
        sheet_id:
          type: integer
          example: 3
        title:
          type: string
          format: nullable
          example: '어디서부터 시작을 해야하지?'
        question:
          type: string
          format: nullable
          example: '단서를 찾기 위해 창우 집을 가봐야겠어! 창우 집 주소가 어떻게 됐더라? (정확한 도로명주소 "시" "구" 그리고 "호수"는 정답으로 작성할 필요가 없습니다.)'
        image:
          type: string
          format: nullable
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_image/3/ac99667c-10aa-4af7-9e30-09e31dfc3894_house.jpg'
        background_image:
          type: string
          format: nullable
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_background_image/3/d4acf837-a4d0-4efa-978b-c54aa649adc7_sky.jpg'
        previous_sheet_infos:
          type: array
          items:
            type: object
            properties:
              sheet_id:
                type: integer
                example: 4
              title:
                type: string
                example: 집 비밀번호가 뭐지?
        next_sheet_id:
          type: integer
          format: nullable
          example: 4
        answer:
          type: string
          format: nullable
          example: '신원로3길 13-7'
        answer_reply:
          type: string
          format: nullable
          example: '맞아 건물 이름은 아트빌이고 302호로 알고 있어!! 빨리 집으로 가보자!!'
        is_solved:
          type: boolean
          example: true
    StoryStartFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '스토리를 불러올 수 없습니다.'
    StoryHistoryDeleteFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '스토리를 플레이 하신 기록이 없으십니다.'
    SheetPlaySuccessResponse:
      required:
        - sheet_id
        - title
        - question
        - image
        - background_image
        - previous_sheet_infos
        - next_sheet_id
        - answer
        - answer_reply
        - is_solved
      type: object
      properties:
        sheet_id:
          type: integer
          example: 3
        title:
          type: string
          format: nullable
          example: '어디서부터 시작을 해야하지?'
        question:
          type: string
          format: nullable
          example: '단서를 찾기 위해 창우 집을 가봐야겠어! 창우 집 주소가 어떻게 됐더라? (정확한 도로명주소 "시" "구" 그리고 "호수"는 정답으로 작성할 필요가 없습니다.)'
        image:
          type: string
          format: nullable
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_image/3/ac99667c-10aa-4af7-9e30-09e31dfc3894_house.jpg'
        background_image:
          type: string
          format: nullable
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_background_image/3/d4acf837-a4d0-4efa-978b-c54aa649adc7_sky.jpg'
        previous_sheet_infos:
          type: array
          items:
            type: object
            properties:
              sheet_id:
                type: integer
                example: 4
              title:
                type: string
                example: 집 비밀번호가 뭐지?
        next_sheet_id:
          type: integer
          format: nullable
          example: 4
        answer:
          type: string
          format: nullable
          example: '신원로3길 13-7'
        answer_reply:
          type: string
          format: nullable
          example: '맞아 건물 이름은 아트빌이고 302호로 알고 있어!! 빨리 집으로 가보자!!'
        is_solved:
          type: boolean
          example: true
    SheetPlayFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '접근할 수 없는 Sheet 입니다.'
    SheetAnswerSubmitSuccessResponse:
      required:
        - is_valid
        - next_sheet_id
        - answer_reply
      type: object
      properties:
        is_valid:
          type: boolean
          example: true
        next_sheet_id:
          type: integer
          format: nullable
          example: 14
        answer_reply:
          type: string
          example: '마음의 눈으로 보시지요.'
    SheetAnswerSubmitFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '이미 문제를 해결한 기록이 있습니다.'
    GetSheetHintsSuccessResponse:
      required:
        - user_sheet_hint_infos
      type: object
      properties:
        user_sheet_hint_infos:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              hint:
                type: string
                example: ''
              point:
                type: integer
                example: 10
              image:
                type: string
                example: ''
              has_history:
                type: boolean
                example: false
    GetSheetHintsFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '존재하지 않은 Sheet 입니다.'
    PostSheetHintsSuccessResponse:
      required:
        - id
        - hint
        - point
        - image
        - has_history
      type: object
      properties:
        id:
          type: integer
          example: 1
        hint:
          type: string
          example: '문제에 정답이 있어요!!'
        point:
          type: integer
          example: 10
        image:
          type: string
          example: 'https://storybuilderstorage.s3.amazonaws.com/sheet_hint_image/1/df317dcf-b161-48b7-ac4e-31c255b73d2c_window_logo.jpg'
        has_history:
          type: boolean
          example: true
    PostSheetHintsFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '유저의 포인트가 부족합니다.'
    GetUserTotalPointSuccessResponse:
      required:
        - total_point
      type: object
      properties:
        total_point:
          type: integer
          example: 100
    PostPointProductRequestSuccessResponse:
      required:
        - tid
        - next_redirect_mobile_url
      type: object
      properties:
        tid:
          type: string
          description: Transaction ID from Kakao Pay.
        next_redirect_mobile_url:
          type: string
          description: The next redirect URL for mobile.
    GetPostPointProductSuccessResponse:
      required:
        - products
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/PointProductItemDTO'
    PointProductItemDTO:
      type: object
      properties:
        product_id:
          type: integer
        product_type:
          type: string
        title:
          type: string
        description:
          type: string
        image:
          type: string
        total_price:
          type: integer
        price:
          type: integer
        total_point:
          type: integer
        point:
          type: integer
        is_sold_out:
          type: boolean
        bought_count:
          type: integer
        review_count:
          type: integer
        review_rate:
          type: number
          format: float
        additional_products:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalPointProductItemDTO'
    AdditionalPointProductItemDTO:
      type: object
      properties:
        description:
          type: string
        price:
          type: integer
        point:
          type: integer
      required:
        - products
        - next_redirect_mobile_url
    GetRecentStorySheetPlayedSuccessResponse:
      required:
        - recent_sheet_id
      type: object
      properties:
        recent_sheet_id:
          type: integer
          example: 4
    GetRecentStorySheetPlayedFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '최근에 해결 못한 sheet 가 없습니다.'
    GroupedSheetAnswerSolve:
      type: object
      properties:
        group_id:
          type: integer
          example: 2
        sheet_answer_solve:
          type: array
          items:
            $ref: '#/components/schemas/UserSheetAnswerSolveHistoryItem'
    UserSheetAnswerSolveHistoryItem:
      type: object
      properties:
        group_id:
          type: integer
          example: 2
        sheet_title:
          type: string
          example: 오늘을 맑은 날
        sheet_question:
          type: string
          example: 오늘은 맑은 날이라고 합니다.\r\n그러면 이 맑은 날의 기준은 어떻게 될까요?
        user_answer:
          type: string
          example: 123123
        solving_status:
          type: string
          example: solving
        start_time:
          type: string
          format: date-time
          example: '2023-04-24 00:43:55'
        solved_time:
          type: string
          format: date-time
          example: '2023-04-24 00:43:56'
    StoryListItemDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        image:
          type: string
        background_image:
          type: string
      required:
        - id
        - title
        - description
        - image
        - background_image
    PopularStoryListItemDTO:
      type: object
      properties:
        story_id:
          type: integer
          format: int32
        title:
          type: string
        image:
          type: string
      required:
        - story_id
        - title
        - image
    StoryDetailItemDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        description:
          type: string
        image:
          type: string
        background_image:
          type: string
        played_count:
          type: integer
        like_count:
          type: integer
        review_rate:
          type: integer
          description: 0.0 ~ 5.0 소수입니다
        playing_point:
          type: integer
        free_to_play_sheet_count:
          type: integer
        level:
          type: string
          example: '하'
        is_liked:
          type: boolean
      required:
        - id
        - title
        - description
        - image
        - background_image
        - played_count
        - like_count
        - review_rate
        - playing_point
        - free_to_play_sheet_count
        - level
        - is_liked
    BannerListItemDTO:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the banner.
        title:
          type: string
          description: The title of the banner.
        background_image:
          type: string
          description: The URL of the background image for the banner.
        background_color:
          type: string
          description: The background color for the banner.
        banner_type_name:
          type: string
          description: The name of the banner type.
    BannerDetailItemDTO:
      type: object
      properties:
        id:
          type: integer
          description: The ID of the banner.
        title:
          type: string
          description: The title of the banner.
        description:
          type: string
          description: The description of the banner.
        background_image:
          type: string
          description: The URL of the background image for the banner.
        background_color:
          type: string
          description: The background color for the banner.
        banner_type_name:
          type: string
          description: The name of the banner type.
        created_at:
          type: string
          example: '2023-04-30 17:31:29'
          description: The date and time when the banner was created.
    GetBannerDetailFailResponse:
      required:
        - message
      type: object
      properties:
        message:
          type: string
          example: '존재하지 않은 배너 입니다.'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header