openapi: 3.0.3
info:
  title: StoryBuilder Admin Side 3.0
  description: |-
    StoryBuilder 로 만들어진 서비스 Admin

  contact:
    email: cwadven@naver.com
  version: 1.0.1
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: Play
    description: 실행에 필요한 API
paths:
  /cms/v1/story:
    get:
      tags:
        - Play
      summary: 모든 스토리 리스트 조회
      description: 모든 스토리 리스트 조회
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
        - name: search_type
          in: query
          description: 필터링 조회 방법
          required: false
          schema:
            type: string
        - name: search_value
          in: query
          description: 필터링 조회 내용
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: 페이지
          required: false
          schema:
            type: integer
        - name: size
          in: query
          description: 페이지 사이즈 (default 20)
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStoryListResponse'
        401:
          description: Invalid User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoAuth'
        403:
          description: Invalid User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoAuth'

  /cms/v1/story/{story_id}/sheet/map:
    get:
      tags:
        - Play
      summary: admin 스토리 안에 있는 Sheet 관련 정보 조회
      description: |
        admin 스토리 안에 있는 Sheet 관련 정보 조회<br>
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
        - name: story_id
          in: path
          description: story id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSheetMapResponse'
        401:
          description: Invalid User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoAuth'
        403:
          description: Invalid User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoAuth'

  /cms/v1/story/{story_id}/answer/map:
    get:
      tags:
        - Play
      summary: admin 스토리 안에 있는 Answer 관련 정보 조회
      description: |
        admin 스토리 안에 있는 Answer 관련 정보 조회<br>
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
        - name: story_id
          in: path
          description: story id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminAnswerMapResponse'
        401:
          description: Invalid User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoAuth'
        403:
          description: Invalid User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoAuth'

  /cms/v1/story/{story_id}/next-path/map:
    get:
      tags:
        - Play
      summary: admin 스토리 안에 있는 Answer 의 다음 경로 관련 정보 조회
      description: |
        admin 스토리 안에 있는 Answer 의 다음 경로 관련 정보 조회<br>
      parameters:
        - name: Authorization
          in: header
          description: 'jwt eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoyLCJ1c2VybmFtZSI6ImN3YWR2ZW4iLCJleHAiOjE2NzUxMzkzMDUsImVtYWlsIjoiY3dhZHZlbkBuYXZlci5jb20iLCJvcmlnX2lhdCI6MTY3NDUzNDUwNX0.18P3JH7ylpEdueesp9xr0Cs7rynQ69baxuOGh2t6DSg'
          required: false
          schema:
            type: string
        - name: story_id
          in: path
          description: story id
          required: true
          schema:
            type: integer
        - name: answer_ids
          in: query
          description: 원하는 answer path 만 조회
          example: '1,2,3,4,5'
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminNextPathMapResponse'
        401:
          description: Invalid User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoAuth'
        403:
          description: Invalid User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNoAuth'

components:
  schemas:
    AdminStoryListResponse:
      required:
        - total_count
        - story_list
      type: object
      properties:
        total_count:
          type: integer
          example: 10
        stories:
          type: array
          items:
            $ref: '#/components/schemas/AdminStoryListItemDTO'

    AdminStoryListItemDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "오늘의 날씨"
        description:
          type: string
          example: "오늘의 날씨는 어떨까요?"
        image:
          type: string
          example: ""
        background_image:
          type: string
          example: ""
        nickname:
          type: string
          example: "admin"
        played_count:
          type: integer
          example: 1
        like_count:
          type: integer
          example: 0
        view_count:
          type: integer
          example: 0
        review_rate:
          type: number
          example: 0
        playing_point:
          type: integer
          example: 0
        level:
          type: integer
          example: 0
        displayable:
          type: boolean
          example: true
        is_deleted:
          type: boolean
          example: false
        is_secret:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
          example: "2022-11-20T14:17:18.590177"
        updated_at:
          type: string
          format: date-time
          example: "2023-04-24T00:27:40.551256"
      required:
        - id
        - title
        - description
        - image
        - background_image
        - nickname
        - played_count
        - like_count
        - view_count
        - review_rate
        - playing_point
        - level
        - displayable
        - is_deleted
        - is_secret
        - created_at
        - updated_at

    AdminSheetMapResponse:
      type: object
      properties:
        sheets:
          type: array
          items:
            $ref: '#/components/schemas/AdminSheetMap'

    AdminSheetMap:
      type: object
      required:
        - id
        - title
        - question
        - hint_count
      properties:
        id:
          type: integer
          example: 10
        title:
          type: string
          example: "Introduction"
        question:
          type: string
          example: "How am I?"
        image:
          type: string
          format: uri
          nullable: true
          example: "https://image.test"
        background_image:
          type: string
          format: uri
          nullable: true
          example: "https://image.test"
        hint_count:
          type: integer
          example: 2
        answer_ids:
          type: array
          items:
            type: integer
          nullable: true
          example: [101, 102, 103, 104]

    AdminAnswerMapResponse:
      type: object
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/AdminAnswerMap'

    AdminNextPathMapResponse:
      type: object
      properties:
        answer_next_paths:
          type: array
          items:
            $ref: '#/components/schemas/AdminNextPathMap'

    AdminNextPathMap:
      type: object
      properties:
        answer_id:
          type: integer
        next_paths:
          type: array
          items:
            type: object
            required:
              - sheet_id
              - quantity
            properties:
              sheet_id:
                type: integer
              quantity:
                type: integer

    AdminAnswerMap:
      type: object
      properties:
        id:
          type: integer
        sheet_id:
          type: integer
        answer:
          type: string
        answer_reply:
          type: string
        is_always_correct:
          type: boolean

    UserNoAuth:
      type: object
      properties:
        message:
          type: string
          example: No Auth

  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
